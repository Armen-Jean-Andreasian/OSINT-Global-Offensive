services:
  redis:
    image: redis:latest
    container_name: redis-container
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis_data:/data
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "PING" ]
      interval: 10s
      timeout: 5s
      retries: 2
    networks:
      - app_network

  django:
    container_name: djangologger-container-v1
    build:
      context: django_project
    networks:
      - app_network
    depends_on:
      - redis
    command: python manage.py runserver 0.0.0.0:8000  # in container
    expose:
      - "8000"  # in docker network
    environment:
      - DEBUG=${DEBUG}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_CACHE_TTL=${REDIS_CACHE_TTL}
      - DOMAIN_FOR_FAKE_URL=${DOMAIN_FOR_FAKE_URL}
    volumes:
    - static_volume:/django_project/nginx/staticfiles


  nginx:
    build:
      context: nginx
    container_name: nginx-container
    ports:
      - "80:80"
    volumes:
      - static_volume:/django_project/nginx/staticfiles
    depends_on:
      - django
    networks:
      - app_network

volumes:
  redis_data:
  static_volume:

networks:
  app_network:
    driver: bridge